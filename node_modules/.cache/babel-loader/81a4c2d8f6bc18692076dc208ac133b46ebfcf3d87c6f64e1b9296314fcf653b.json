{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"banner-content\"\n};\nconst _hoisted_2 = {\n  class: \"banner-title\"\n};\nconst _hoisted_3 = {\n  class: \"banner-description\"\n};\nconst _hoisted_4 = {\n  class: \"banner-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"banner\",\n    style: _normalizeStyle({\n      backgroundImage: `url(${$options.bannerImage})`\n    })\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", _hoisted_2, _toDisplayString($props.heroMovie.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_3, _toDisplayString($props.heroMovie.overview || \"영화에 대한 설명이 없습니다.\"), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    class: \"banner-button play\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.playMovie && $options.playMovie(...args))\n  }, \" 재생 \"), _createElementVNode(\"button\", {\n    class: \"banner-button info\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.showDetails && $options.showDetails(...args))\n  }, \" 상세 정보 \")])]), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"banner-fade\"\n  }, null, -1 /* HOISTED */))], 4 /* STYLE */);\n}","map":{"version":3,"names":["class","_createElementBlock","style","_normalizeStyle","backgroundImage","$options","bannerImage","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","$props","heroMovie","title","_hoisted_3","overview","_hoisted_4","onClick","_cache","args","playMovie","showDetails"],"sources":["C:\\Users\\hyemi\\WSD-Assignment-04\\src\\components\\Banner.vue"],"sourcesContent":["<template>\n    <div\n      class=\"banner\"\n      :style=\"{ backgroundImage: `url(${bannerImage})` }\"\n    >\n      <div class=\"banner-content\">\n        <h1 class=\"banner-title\">\n{{ heroMovie.title }}\n</h1>\n        <p class=\"banner-description\">\n          {{ heroMovie.overview || \"영화에 대한 설명이 없습니다.\" }}\n        </p>\n        <div class=\"banner-buttons\">\n          <button\nclass=\"banner-button play\"\n@click=\"playMovie\"\n>\n            재생\n          </button>\n          <button\nclass=\"banner-button info\"\n@click=\"showDetails\"\n>\n            상세 정보\n          </button>\n        </div>\n      </div>\n      <div class=\"banner-fade\" />\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: \"Banner\",\n    props: {\n      heroMovie: {\n        type: Object,\n        required: true,\n      },\n    },\n    computed: {\n      bannerImage() {\n        return this.heroMovie.backdrop_path\n          ? `https://image.tmdb.org/t/p/original${this.heroMovie.backdrop_path}`\n          : \"\";\n      },\n    },\n    methods: {\n      playMovie() {\n        console.log(\"Play movie:\", this.heroMovie.title);\n      },\n      showDetails() {\n        if (this.heroMovie.id) {\n          this.$router.push(`/movie/${this.heroMovie.id}`);\n        } else {\n          console.error(\"Movie ID is not available\");\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* 기본 배너 스타일 */\n  .banner {\n    position: relative;\n    height: 70vh;\n    color: #fff;\n    display: flex;\n    align-items: flex-end;\n    padding: 20px;\n    background-size: cover;\n    background-position: center;\n  }\n  \n  .banner-content {\n    z-index: 10;\n    max-width: 50%;\n  }\n  \n  .banner-title {\n    font-size: 3rem;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n  \n  .banner-description {\n    font-size: 1.2rem;\n    line-height: 1.5;\n    margin-bottom: 20px;\n  }\n  \n  .banner-buttons {\n    display: flex;\n    gap: 10px;\n  }\n  \n  .banner-button {\n    padding: 10px 20px;\n    font-size: 1rem;\n    border: none;\n    cursor: pointer;\n    border-radius: 5px;\n    transition: transform 0.2s ease-in-out;\n  }\n  \n  .banner-button.play {\n    background-color: #e50914;\n    color: white;\n  }\n  \n  .banner-button.info {\n    background-color: rgba(109, 109, 110, 0.7);\n    color: white;\n  }\n  \n  .banner-button:hover {\n    transform: scale(1.05);\n  }\n  \n  .banner-fade {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 15%;\n    background-image: linear-gradient(180deg, transparent, rgba(37, 37, 37, 0.61), #111);\n  }\n  \n  /* 반응형 스타일 추가 */\n  @media (max-width: 768px) {\n    .banner {\n      height: 50vh; /* 모바일에서 배너 크기를 줄임 */\n      align-items: center;\n      text-align: center;\n    }\n  \n    .banner-content {\n      max-width: 90%;\n      padding: 0 10px;\n    }\n  \n    .banner-title {\n      font-size: 1.8rem;\n    }\n  \n    .banner-description {\n      font-size: 1rem;\n    }\n  \n    .banner-buttons {\n      justify-content: center;\n      flex-wrap: wrap;\n    }\n  \n    .banner-button {\n      width: 100px;\n      padding: 8px 15px;\n      font-size: 0.9rem;\n    }\n  }\n  </style>\n  "],"mappings":";;EAKWA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAc;;EAGrBA,KAAK,EAAC;AAAoB;;EAGxBA,KAAK,EAAC;AAAgB;;uBAX/BC,mBAAA,CA2BM;IA1BJD,KAAK,EAAC,QAAQ;IACbE,KAAK,EAHZC,eAAA;MAAAC,eAAA,SAGwCC,QAAA,CAAAC,WAAW;IAAA;MAE7CC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJD,mBAAA,CAEH,MAFGE,UAEH,EAAAC,gBAAA,CADFC,MAAA,CAAAC,SAAS,CAACC,KAAK,kBAEVN,mBAAA,CAEI,KAFJO,UAEI,EAAAJ,gBAAA,CADCC,MAAA,CAAAC,SAAS,CAACG,QAAQ,wCAEvBR,mBAAA,CAaM,OAbNS,UAaM,GAZJT,mBAAA,CAKS;IAJnBP,KAAK,EAAC,oBAAoB;IACzBiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEd,QAAA,CAAAe,SAAA,IAAAf,QAAA,CAAAe,SAAA,IAAAD,IAAA,CAAS;KAChB,MAES,GACAZ,mBAAA,CAKS;IAJnBP,KAAK,EAAC,oBAAoB;IACzBiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEd,QAAA,CAAAgB,WAAA,IAAAhB,QAAA,CAAAgB,WAAA,IAAAF,IAAA,CAAW;KAClB,SAES,E,+BAGJZ,mBAAA,CAA2B;IAAtBP,KAAK,EAAC;EAAa,4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}