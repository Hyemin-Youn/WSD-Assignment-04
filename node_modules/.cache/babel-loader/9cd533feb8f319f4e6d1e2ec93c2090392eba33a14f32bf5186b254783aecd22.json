{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nimport Banner from \"@/components/Banner.vue\";\nimport Navbar from \"@/components/Navbar.vue\";\nimport SliderContent from \"@/components/SliderContent.vue\";\nexport default {\n  name: \"Home\",\n  components: {\n    Banner,\n    Navbar,\n    SliderContent\n  },\n  data() {\n    return {\n      isLoading: true,\n      heroMovie: {},\n      movieCategories: [{\n        name: \"popular\",\n        title: \"인기 영화\",\n        movies: []\n      }, {\n        name: \"now_playing\",\n        title: \"최신 영화\",\n        movies: []\n      }, {\n        name: \"top_rated\",\n        title: \"높은 평점 영화\",\n        movies: []\n      }, {\n        name: \"upcoming\",\n        title: \"개봉 예정 영화\",\n        movies: []\n      }]\n    };\n  },\n  created() {\n    this.loadData();\n  },\n  methods: {\n    async loadData() {\n      try {\n        await Promise.all([this.fetchHeroMovie(), this.fetchMovies()]);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async fetchHeroMovie() {\n      const API_KEY = process.env.VUE_APP_API_KEY;\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=ko-KR`);\n        this.heroMovie = response.data.results[0];\n      } catch (error) {\n        console.error(\"Hero Movie 로드 실패:\", error);\n      }\n    },\n    async fetchMovies() {\n      const API_KEY = process.env.VUE_APP_API_KEY;\n      try {\n        const requests = this.movieCategories.map(async category => {\n          const response = await axios.get(`https://api.themoviedb.org/3/movie/${category.name}?api_key=${API_KEY}&language=ko-KR`);\n          category.movies = response.data.results;\n        });\n        await Promise.all(requests);\n      } catch (error) {\n        console.error(\"Movie Categories 로드 실패:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Banner","Navbar","SliderContent","name","components","data","isLoading","heroMovie","movieCategories","title","movies","created","loadData","methods","Promise","all","fetchHeroMovie","fetchMovies","error","console","API_KEY","process","env","VUE_APP_API_KEY","response","get","results","requests","map","category"],"sources":["C:\\Users\\hyemi\\WSD-Assignment-04\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Navbar />\r\n\r\n    <div class=\"home\">\r\n      <div\nv-if=\"isLoading\"\nclass=\"loading-overlay\"\n>\r\n        <p>로딩중...</p>\r\n      </div>\r\n\r\n      <div v-else>\r\n        <Banner :heroMovie=\"heroMovie\" />\r\n        \r\n        <div\nv-for=\"category in movieCategories\"\n:key=\"category.name\"\nclass=\"movie-category\"\n>\r\n          <h3>{{ category.title }}</h3>\r\n          <SliderContent :movies=\"category.movies\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Banner from \"@/components/Banner.vue\";\r\nimport Navbar from \"@/components/Navbar.vue\";\r\nimport SliderContent from \"@/components/SliderContent.vue\";\r\n\r\nexport default {\r\n  name: \"Home\",\r\n  components: {\r\n    Banner,\r\n    Navbar,\r\n    SliderContent,\r\n  },\r\n  data() {\r\n    return {\r\n      isLoading: true,\r\n      heroMovie: {},\r\n      movieCategories: [\r\n        { name: \"popular\", title: \"인기 영화\", movies: [] },\r\n        { name: \"now_playing\", title: \"최신 영화\", movies: [] },\r\n        { name: \"top_rated\", title: \"높은 평점 영화\", movies: [] },\r\n        { name: \"upcoming\", title: \"개봉 예정 영화\", movies: [] },\r\n      ],\r\n    };\r\n  },\r\n  created() {\r\n    this.loadData();\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      try {\r\n        await Promise.all([this.fetchHeroMovie(), this.fetchMovies()]);\r\n      } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    async fetchHeroMovie() {\r\n      const API_KEY = process.env.VUE_APP_API_KEY;\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=ko-KR`\r\n        );\r\n        this.heroMovie = response.data.results[0];\r\n      } catch (error) {\r\n        console.error(\"Hero Movie 로드 실패:\", error);\r\n      }\r\n    },\r\n    async fetchMovies() {\r\n      const API_KEY = process.env.VUE_APP_API_KEY;\r\n      try {\r\n        const requests = this.movieCategories.map(async (category) => {\r\n          const response = await axios.get(\r\n            `https://api.themoviedb.org/3/movie/${category.name}?api_key=${API_KEY}&language=ko-KR`\r\n          );\r\n          category.movies = response.data.results;\r\n        });\r\n        await Promise.all(requests);\r\n      } catch (error) {\r\n        console.error(\"Movie Categories 로드 실패:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.home {\r\n  padding: 20px;\r\n  background-color: #141414;\r\n  color: #ffffff;\r\n}\r\n\r\n.loading-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n  font-size: 1.5em;\r\n}\r\n\r\n.movie-category {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.movie-category h3 {\r\n  font-size: 1.5em;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":";AA6BA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,aAAY,MAAO,gCAAgC;AAE1D,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;IACVJ,MAAM;IACNC,MAAM;IACNC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,CAAC,CAAC;MACbC,eAAe,EAAE,CACf;QAAEL,IAAI,EAAE,SAAS;QAAEM,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAG,CAAC,EAC/C;QAAEP,IAAI,EAAE,aAAa;QAAEM,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAG,CAAC,EACnD;QAAEP,IAAI,EAAE,WAAW;QAAEM,KAAK,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAG,CAAC,EACpD;QAAEP,IAAI,EAAE,UAAU;QAAEM,KAAK,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAG,CAAC;IAEvD,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAME,OAAO,CAACC,GAAG,CAAC,CAAC,IAAI,CAACC,cAAc,CAAC,CAAC,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;MAChE,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,UAAU;QACR,IAAI,CAACZ,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IACD,MAAMU,cAAcA,CAAA,EAAG;MACrB,MAAMI,OAAM,GAAIC,OAAO,CAACC,GAAG,CAACC,eAAe;MAC3C,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAC9B,sDAAsDL,OAAO,iBAC/D,CAAC;QACD,IAAI,CAACb,SAAQ,GAAIiB,QAAQ,CAACnB,IAAI,CAACqB,OAAO,CAAC,CAAC,CAAC;MAC3C,EAAE,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF,CAAC;IACD,MAAMD,WAAWA,CAAA,EAAG;MAClB,MAAMG,OAAM,GAAIC,OAAO,CAACC,GAAG,CAACC,eAAe;MAC3C,IAAI;QACF,MAAMI,QAAO,GAAI,IAAI,CAACnB,eAAe,CAACoB,GAAG,CAAC,MAAOC,QAAQ,IAAK;UAC5D,MAAML,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAC9B,sCAAsCI,QAAQ,CAAC1B,IAAI,YAAYiB,OAAO,iBACxE,CAAC;UACDS,QAAQ,CAACnB,MAAK,GAAIc,QAAQ,CAACnB,IAAI,CAACqB,OAAO;QACzC,CAAC,CAAC;QACF,MAAMZ,OAAO,CAACC,GAAG,CAACY,QAAQ,CAAC;MAC7B,EAAE,OAAOT,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}