{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"movie-card\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = {\n  class: \"movie-info\"\n};\nconst _hoisted_4 = {\n  class: \"movie-title\"\n};\nconst _hoisted_5 = {\n  class: \"release-date\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"movie-rating\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    src: $options.posterUrl,\n    alt: $props.movie.title,\n    class: \"poster\"\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString($props.movie.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, \" 개봉일: \" + _toDisplayString($options.formattedReleaseDate), 1 /* TEXT */), $props.movie.vote_average ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \" ⭐ \" + _toDisplayString($props.movie.vote_average) + \" / 10 \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"span\", {\n    class: \"wishlist-icon\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.handleWishlist && $options.handleWishlist(...args), [\"stop\"]))\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass(_ctx.isInWishlist($props.movie.id) ? 'fas fa-heart liked' : 'far fa-heart')\n  }, null, 2 /* CLASS */)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","src","$options","posterUrl","alt","$props","movie","title","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","formattedReleaseDate","vote_average","_hoisted_6","_createCommentVNode","onClick","_cache","_withModifiers","args","handleWishlist","_normalizeClass","_ctx","isInWishlist","id"],"sources":["C:\\Users\\hyemi\\WSD-Assignment-04\\src\\components\\MovieCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"movie-card\">\r\n    <img\r\n:src=\"posterUrl\"\r\n:alt=\"movie.title\"\r\nclass=\"poster\"\r\n>\r\n    <div class=\"movie-info\">\r\n      <p class=\"movie-title\">\r\n{{ movie.title }}\r\n</p>\r\n      <p class=\"release-date\">\r\n개봉일: {{ formattedReleaseDate }}\r\n</p>\r\n      <div\r\nv-if=\"movie.vote_average\"\r\nclass=\"movie-rating\"\r\n>\r\n        ⭐ {{ movie.vote_average }} / 10\r\n      </div>\r\n    </div>\r\n    <span\r\nclass=\"wishlist-icon\"\r\n@click.stop=\"handleWishlist\"\r\n>\r\n      <i :class=\"isInWishlist(movie.id) ? 'fas fa-heart liked' : 'far fa-heart'\" />\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  props: {\r\n    movie: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"isInWishlist\"]), // Vuex getter 연결\r\n    posterUrl() {\r\n      return `https://image.tmdb.org/t/p/w500/${this.movie.poster_path}`;\r\n    },\r\n    formattedReleaseDate() {\r\n      if (!this.movie.release_date) return \"알 수 없음\";\r\n      const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n      return new Date(this.movie.release_date).toLocaleDateString(\"ko-KR\", options);\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions([\"toggleWishlist\"]), // Vuex action 연결\r\n    handleWishlist() {\r\n      this.toggleWishlist(this.movie); // 영화 추가/삭제 토글\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.movie-card {\r\n  position: relative;\r\n  width: 150px;\r\n  cursor: pointer;\r\n  flex-shrink: 0;\r\n  overflow: hidden;\r\n  text-align: center;\r\n}\r\n\r\n.poster {\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  transition: transform 0.3s ease-in-out;\r\n}\r\n\r\n.movie-card:hover .poster {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.movie-info {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  padding: 10px;\r\n  text-align: center;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease-in-out;\r\n}\r\n\r\n.movie-card:hover .movie-info {\r\n  opacity: 1;\r\n}\r\n\r\n.movie-title {\r\n  font-size: 14px;\r\n  color: white;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.release-date {\r\n  font-size: 12px;\r\n  color: #b3b3b3;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.movie-rating {\r\n  font-size: 12px;\r\n  color: gold;\r\n}\r\n\r\n.wishlist-icon {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  font-size: 16px;\r\n  color: white;\r\n}\r\n\r\n.wishlist-icon .liked {\r\n  color: #e50914;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAY;mBADzB;;EAOSA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAa;;EAGnBA,KAAK,EAAC;AAAc;;EAX7BC,GAAA;EAgBAD,KAAK,EAAC;;;uBAfJE,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,CAIH;IAHAC,GAAG,EAAEC,QAAA,CAAAC,SAAS;IACdC,GAAG,EAAEC,MAAA,CAAAC,KAAK,CAACC,KAAK;IACjBX,KAAK,EAAC;0BALNY,UAAA,GAOIR,mBAAA,CAaM,OAbNS,UAaM,GAZJT,mBAAA,CAEF,KAFEU,UAEF,EAAAC,gBAAA,CADDN,MAAA,CAAAC,KAAK,CAACC,KAAK,kBAERP,mBAAA,CAEF,KAFEY,UAEF,EAF0B,QACzB,GAAAD,gBAAA,CAAGT,QAAA,CAAAW,oBAAoB,kBAGtBR,MAAA,CAAAC,KAAK,CAACQ,YAAY,I,cADlBhB,mBAAA,CAKM,OALNiB,UAKM,EAFX,KACS,GAAAJ,gBAAA,CAAGN,MAAA,CAAAC,KAAK,CAACQ,YAAY,IAAG,QAC5B,mBAnBNE,mBAAA,e,GAqBIhB,mBAAA,CAKO;IAJXJ,KAAK,EAAC,eAAe;IACpBqB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAvBNC,cAAA,KAAAC,IAAA,KAuBalB,QAAA,CAAAmB,cAAA,IAAAnB,QAAA,CAAAmB,cAAA,IAAAD,IAAA,CAAc;MAErBpB,mBAAA,CAA6E;IAAzEJ,KAAK,EAzBf0B,eAAA,CAyBiBC,IAAA,CAAAC,YAAY,CAACnB,MAAA,CAAAC,KAAK,CAACmB,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}