{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"movie-detail\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.movie ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    src: $options.makeImagePath($data.movie.backdrop_path, 'w1280'),\n    alt: \"Movie Background\"\n  }, null, 8, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", null, _toDisplayString($data.movie.title), 1), _createElementVNode(\"p\", null, _toDisplayString($data.movie.overview), 1), _createElementVNode(\"p\", null, \"개봉일: \" + _toDisplayString($data.movie.release_date), 1), _createElementVNode(\"p\", null, \"평점: ⭐ \" + _toDisplayString($data.movie.vote_average), 1)])])) : _createCommentVNode(\"\", true);\n}","map":{"version":3,"names":["key","class","$data","movie","_createElementBlock","_hoisted_1","_createElementVNode","src","$options","makeImagePath","backdrop_path","alt","_hoisted_2","_hoisted_3","_toDisplayString","title","overview","release_date","vote_average","_createCommentVNode"],"sources":["C:\\Users\\hyemi\\WSD-Assignment-04\\src\\views\\MovieDetail.vue"],"sourcesContent":["<template>\r\n    <div\nv-if=\"movie\"\nclass=\"movie-detail\"\n>\r\n      <img\n:src=\"makeImagePath(movie.backdrop_path, 'w1280')\"\nalt=\"Movie Background\"\n>\r\n      <div class=\"content\">\r\n        <h2>{{ movie.title }}</h2>\r\n        <p>{{ movie.overview }}</p>\r\n        <p>개봉일: {{ movie.release_date }}</p>\r\n        <p>평점: ⭐ {{ movie.vote_average }}</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        movie: null,\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchMovieDetail();\r\n    },\r\n    methods: {\r\n      async fetchMovieDetail() {\r\n        const API_KEY = process.env.VUE_APP_API_KEY;\r\n        const movieId = this.$route.params.id;\r\n        try {\r\n          const response = await axios.get(\r\n            `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=ko-KR`\r\n          );\r\n          this.movie = response.data;\r\n        } catch (error) {\r\n          console.error(\"Error fetching movie details:\", error);\r\n        }\r\n      },\r\n      makeImagePath(path, size) {\r\n        return `https://image.tmdb.org/t/p/${size}${path}`;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .movie-detail {\r\n    position: relative;\r\n    color: white;\r\n    text-align: center;\r\n  }\r\n  \r\n  .movie-detail img {\r\n    width: 100%;\r\n    max-height: 500px;\r\n    object-fit: cover;\r\n    border-radius: 10px;\r\n  }\r\n  \r\n  .content {\r\n    padding: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAAAA,GAAA;EAGAC,KAAK,EAAC;;mBAHN;;EASWA,KAAK,EAAC;AAAS;;SAPpBC,KAAA,CAAAC,KAAK,I,cADPC,mBAAA,CAcM,OAdNC,UAcM,GAVJC,mBAAA,CAGL;IAFAC,GAAG,EAAEC,QAAA,CAAAC,aAAa,CAACP,KAAA,CAAAC,KAAK,CAACO,aAAa;IACvCC,GAAG,EAAC;cAPJC,UAAA,GASMN,mBAAA,CAKM,OALNO,UAKM,GAJJP,mBAAA,CAA0B,YAAAQ,gBAAA,CAAnBZ,KAAA,CAAAC,KAAK,CAACY,KAAK,OAClBT,mBAAA,CAA2B,WAAAQ,gBAAA,CAArBZ,KAAA,CAAAC,KAAK,CAACa,QAAQ,OACpBV,mBAAA,CAAoC,WAAjC,OAAK,GAAAQ,gBAAA,CAAGZ,KAAA,CAAAC,KAAK,CAACc,YAAY,OAC7BX,mBAAA,CAAqC,WAAlC,QAAM,GAAAQ,gBAAA,CAAGZ,KAAA,CAAAC,KAAK,CAACe,YAAY,M,OAbtCC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}