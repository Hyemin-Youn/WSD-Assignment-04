{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"popular\"\n};\nconst _hoisted_2 = {\n  class: \"movie-grid\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MovieCard = _resolveComponent(\"MovieCard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.movies, movie => {\n    return _openBlock(), _createBlock(_component_MovieCard, {\n      key: movie.id,\n      movie: movie\n    }, null, 8, [\"movie\"]);\n  }), 128))]), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" 로딩 중... \")) : _createCommentVNode(\"\", true), $data.showScrollTopButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"scroll-top\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.scrollToTop && $options.scrollToTop(...args))\n  }, \" TOP(위로) \")) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","movies","movie","_createBlock","_component_MovieCard","id","loading","_hoisted_3","_createCommentVNode","showScrollTopButton","onClick","_cache","args","$options","scrollToTop"],"sources":["C:\\Users\\hyemi\\WSD-Assignment-04\\src\\views\\PopularInfinite.vue"],"sourcesContent":["<template>\r\n    <div class=\"popular\">\r\n      <!-- Navbar -->\r\n      <!-- <Navbar class=\"navbar\" /> -->\r\n  \r\n      <!-- 영화 리스트 -->\r\n      <div class=\"movie-grid\">\r\n        <MovieCard\nv-for=\"movie in movies\"\n:key=\"movie.id\"\n:movie=\"movie\"\n/>\r\n      </div>\r\n  \r\n      <!-- Loading Spinner -->\r\n      <div\nv-if=\"loading\"\nclass=\"loading\"\n>\r\n        로딩 중...\r\n      </div>\r\n  \r\n      <!-- 맨 위로 올라가기 버튼 -->\r\n      <button\nv-if=\"showScrollTopButton\"\nclass=\"scroll-top\"\n@click=\"scrollToTop\"\n>\r\n        TOP(위로)\r\n      </button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n//   import Navbar from \"@/components/Navbar.vue\";\r\n  import MovieCard from \"@/components/MovieCard.vue\";\r\n  import { fetchPopularMovies } from \"../api/movies\";\r\n  \r\n  export default {\r\n    name: \"PopularInfinite\",\r\n    components: {\r\n    //   Navbar,\r\n      MovieCard,\r\n    },\r\n    data() {\r\n      return {\r\n        movies: [],\r\n        currentPage: 1,\r\n        totalPages: 1,\r\n        loading: false,\r\n        showScrollTopButton: false,\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchMovies();\r\n      window.addEventListener(\"scroll\", this.handleScroll);\r\n    },\r\n    beforeUnmount() {\r\n      window.removeEventListener(\"scroll\", this.handleScroll);\r\n    },\r\n    methods: {\r\n      async fetchMovies(page = 1) {\r\n        if (this.loading || page > this.totalPages) return;\r\n  \r\n        this.loading = true;\r\n        const data = await fetchPopularMovies(page);\r\n        this.movies = [...this.movies, ...data.results];\r\n        this.currentPage = page;\r\n        this.totalPages = data.total_pages;\r\n        this.loading = false;\r\n      },\r\n      handleScroll() {\r\n        const bottomOfWindow =\r\n          window.innerHeight + window.scrollY >= document.body.offsetHeight - 100;\r\n  \r\n        if (bottomOfWindow && this.currentPage < this.totalPages) {\r\n          this.fetchMovies(this.currentPage + 1); // 다음 페이지 데이터 로드\r\n        }\r\n  \r\n        this.showScrollTopButton = window.scrollY > 300;\r\n      },\r\n      scrollToTop() {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Navbar 고정 */\r\n  .navbar {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    background-color: #121212;\r\n    border-bottom: 1px solid #333;\r\n  }\r\n  \r\n  .popular {\r\n    padding-top: 60px;\r\n    background-color: #121212;\r\n    color: #fff;\r\n    min-height: 100vh;\r\n  }\r\n  \r\n  .movie-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n    gap: 20px;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .loading {\r\n    text-align: center;\r\n    margin: 20px 0;\r\n    color: white;\r\n  }\r\n  \r\n  .scroll-top {\r\n    position: fixed;\r\n    bottom: 20px;\r\n    right: 20px;\r\n    background-color: #e50914;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .scroll-top:hover {\r\n    background-color: #b00610;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n  .movie-grid {\r\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); /* 모바일에서 카드 크기 */\r\n    gap: 10px;\r\n  }\r\n}\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAS;;EAKbA,KAAK,EAAC;AAAY;;EAN7BC,GAAA;EAiBAD,KAAK,EAAC;;;;uBAhBFE,mBAAA,CA6BM,OA7BNC,UA6BM,GAxBJC,mBAAA,CAMM,OANNC,UAMM,I,kBALJH,mBAAA,CAINI,SAAA,QAXFC,WAAA,CAQgBC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBADJC,YAAA,CAINC,oBAAA;MAFDX,GAAG,EAAES,KAAK,CAACG,EAAE;MACbH,KAAK,EAAEA;;eAMFF,KAAA,CAAAM,OAAO,I,cADPZ,mBAAA,CAKM,OALNa,UAKM,EAFX,WAEK,KApBNC,mBAAA,YAwBMR,KAAA,CAAAS,mBAAmB,I,cADnBf,mBAAA,CAMS;IA7BfD,GAAA;IAyBAD,KAAK,EAAC,YAAY;IACjBkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAClB,WAEK,KA7BNJ,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}