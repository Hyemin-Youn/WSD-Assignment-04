{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  class: \"remember-me\"\n};\nconst _hoisted_5 = {\n  class: \"content\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_7 = {\n  class: \"terms\"\n};\nconst _hoisted_8 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[23] || (_cache[23] = _createElementVNode(\"div\", {\n    class: \"bg-image\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 로그인 카드 \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"card\", {\n      active: $data.activeCard === 'login',\n      backward: $data.activeCard === 'signup'\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[16] || (_cache[16] = _createElementVNode(\"h2\", null, \"Login\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.handleLogin && $options.handleLogin(...args), [\"prevent\"]))\n  }, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Email\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), $data.loginError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.loginError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"rememberMe\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.rememberMe = $event),\n    type: \"checkbox\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.rememberMe]]), _cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"rememberMe\"\n  }, \"Remember Me\", -1 /* HOISTED */))]), _cache[14] || (_cache[14] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \" Sign In \", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"p\", {\n    class: \"switch\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.switchToSignup && $options.switchToSignup(...args))\n  }, _cache[15] || (_cache[15] = [_createTextVNode(\" Don't have an account? \"), _createElementVNode(\"b\", null, \"Sign up\", -1 /* HOISTED */)]))])], 2 /* CLASS */), _createCommentVNode(\" 회원가입 카드 \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"card\", {\n      active: $data.activeCard === 'signup',\n      backward: $data.activeCard === 'login'\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_5, [_cache[22] || (_cache[22] = _createElementVNode(\"h2\", null, \"Sign Up\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[9] || (_cache[9] = _withModifiers((...args) => $options.handleRegister && $options.handleRegister(...args), [\"prevent\"]))\n  }, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", {\n    for: \"newEmail\"\n  }, \"Email\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"newEmail\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newEmail = $event),\n    type: \"email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newEmail]]), _cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    for: \"newPassword\"\n  }, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"newPassword\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.newPassword = $event),\n    type: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]]), _cache[20] || (_cache[20] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"Confirm Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.confirmPassword = $event),\n    type: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), $data.signupError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.signupError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"terms\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.termsAccepted = $event),\n    type: \"checkbox\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.termsAccepted]]), _cache[17] || (_cache[17] = _createElementVNode(\"label\", {\n    for: \"terms\"\n  }, [_createTextVNode(\"I have read the \"), _createElementVNode(\"b\", null, \"Terms and Conditions\")], -1 /* HOISTED */))]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: !$data.termsAccepted\n  }, \" Register \", 8 /* PROPS */, _hoisted_8)], 32 /* NEED_HYDRATION */), _createElementVNode(\"p\", {\n    class: \"switch\",\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.switchToLogin && $options.switchToLogin(...args))\n  }, _cache[21] || (_cache[21] = [_createTextVNode(\" Already have an account? \"), _createElementVNode(\"b\", null, \"Sign in\", -1 /* HOISTED */)]))])], 2 /* CLASS */)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createElementVNode","_hoisted_1","_createCommentVNode","_normalizeClass","active","$data","activeCard","backward","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","handleLogin","for","id","$event","email","type","required","password","loginError","_hoisted_3","_toDisplayString","_hoisted_4","rememberMe","onClick","switchToSignup","_createTextVNode","_hoisted_5","handleRegister","newEmail","newPassword","confirmPassword","signupError","_hoisted_6","_hoisted_7","termsAccepted","disabled","_hoisted_8","switchToLogin"],"sources":["C:\\Users\\hyemi\\WSD-Assignment-04\\src\\components\\sign-in\\SignIn.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"bg-image\" />\r\n    <div class=\"wrapper\">\r\n      <!-- 로그인 카드 -->\r\n      <div\r\n        class=\"card\"\r\n        :class=\"{ active: activeCard === 'login', backward: activeCard === 'signup' }\"\r\n      >\r\n        <div class=\"content\">\r\n          <h2>Login</h2>\r\n          <form @submit.prevent=\"handleLogin\">\r\n            <label for=\"email\">Email</label>\r\n            <input\r\nid=\"email\"\r\nv-model=\"email\"\r\ntype=\"email\"\r\nrequired\r\n>\r\n\r\n            <label for=\"password\">Password</label>\r\n            <input\r\nid=\"password\"\r\nv-model=\"password\"\r\ntype=\"password\"\r\nrequired\r\n>\r\n\r\n            <p\r\nv-if=\"loginError\"\r\nclass=\"error\"\r\n>\r\n{{ loginError }}\r\n</p>\r\n\r\n            <div class=\"remember-me\">\r\n              <input\r\nid=\"rememberMe\"\r\nv-model=\"rememberMe\"\r\ntype=\"checkbox\"\r\n>\r\n              <label for=\"rememberMe\">Remember Me</label>\r\n            </div>\r\n\r\n            <button type=\"submit\">\r\nSign In\r\n</button>\r\n          </form>\r\n          <p\r\nclass=\"switch\"\r\n@click=\"switchToSignup\"\r\n>\r\n            Don't have an account? <b>Sign up</b>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 회원가입 카드 -->\r\n      <div\r\n        class=\"card\"\r\n        :class=\"{ active: activeCard === 'signup', backward: activeCard === 'login' }\"\r\n      >\r\n        <div class=\"content\">\r\n          <h2>Sign Up</h2>\r\n          <form @submit.prevent=\"handleRegister\">\r\n            <label for=\"newEmail\">Email</label>\r\n            <input\r\nid=\"newEmail\"\r\nv-model=\"newEmail\"\r\ntype=\"email\"\r\nrequired\r\n>\r\n\r\n            <label for=\"newPassword\">Password</label>\r\n            <input\r\nid=\"newPassword\"\r\nv-model=\"newPassword\"\r\ntype=\"password\"\r\nrequired\r\n>\r\n\r\n            <label for=\"confirmPassword\">Confirm Password</label>\r\n            <input\r\n              id=\"confirmPassword\"\r\n              v-model=\"confirmPassword\"\r\n              type=\"password\"\r\n              required\r\n            >\r\n\r\n            <p\r\nv-if=\"signupError\"\r\nclass=\"error\"\r\n>\r\n{{ signupError }}\r\n</p>\r\n\r\n            <div class=\"terms\">\r\n              <input\r\nid=\"terms\"\r\nv-model=\"termsAccepted\"\r\ntype=\"checkbox\"\r\n>\r\n              <label for=\"terms\">I have read the <b>Terms and Conditions</b></label>\r\n            </div>\r\n\r\n            <button\r\ntype=\"submit\"\r\n:disabled=\"!termsAccepted\"\r\n>\r\nRegister\r\n</button>\r\n          </form>\r\n          <p\r\nclass=\"switch\"\r\n@click=\"switchToLogin\"\r\n>\r\n            Already have an account? <b>Sign in</b>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      activeCard: \"login\", // 현재 활성 카드 (login or signup)\r\n      email: \"\",\r\n      password: \"\",\r\n      rememberMe: false,\r\n      loginError: \"\",\r\n      newEmail: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n      termsAccepted: false,\r\n      signupError: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    switchToSignup() {\r\n      this.activeCard = \"signup\";\r\n      this.triggerCardAnimation();\r\n    },\r\n    switchToLogin() {\r\n      this.activeCard = \"login\";\r\n      this.triggerCardAnimation();\r\n    },\r\n    triggerCardAnimation() {\r\n      const cards = document.querySelectorAll(\".card\");\r\n      cards.forEach((card) => {\r\n        if (card.classList.contains(\"active\")) {\r\n          card.classList.remove(\"active\");\r\n          card.classList.add(\"backward\");\r\n        } else {\r\n          card.classList.remove(\"backward\");\r\n          card.classList.add(\"enter\");\r\n          setTimeout(() => {\r\n            card.classList.remove(\"enter\");\r\n            card.classList.add(\"active\");\r\n          }, 1000); // 애니메이션 시간을 1초로 설정\r\n        }\r\n      });\r\n    },\r\n    handleLogin() {\r\n      if (this.password.length < 6) {\r\n        this.loginError = \"Password must be at least 6 characters long.\";\r\n        return;\r\n      }\r\n      alert(\"Login successful!\");\r\n      this.$store.dispatch(\"login\", { email: this.email });\r\n      if (this.$route.path !== \"/home\") {\r\n        this.$router.push(\"/home\");\r\n      }\r\n    },\r\n    handleRegister() {\r\n      if (this.newPassword.length < 6) {\r\n        this.signupError = \"Password must be at least 6 characters long.\";\r\n        return;\r\n      }\r\n      if (this.newPassword !== this.confirmPassword) {\r\n        this.signupError = \"Passwords do not match.\";\r\n        return;\r\n      }\r\n      alert(\"Registration successful!\");\r\n      this.switchToLogin();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 배경 이미지 */\r\n.bg-image {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: url('https://images.unsplash.com/photo-1512070679279-8988d32161be?q=80&w=1938&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D');\r\n  background-size: cover;\r\n  background-position: center;\r\n  z-index: -1;\r\n}\r\n\r\n/* 컨테이너 */\r\n.wrapper {\r\n  width: 90%;\r\n  max-width: 600px; /* 데스크톱에서는 최대 600px */\r\n  height: auto; /* 높이를 콘텐츠에 따라 조정 */\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  perspective: 1000px;\r\n}\r\n\r\n/* 카드 */\r\n.card {\r\n  width: 100%; /* wrapper에 맞게 크기 조정 */\r\n  max-width: 560px; /* 데스크톱에서 최대 너비 */\r\n  height: auto; /* 높이를 콘텐츠에 따라 자동 조정 */\r\n  position: absolute;\r\n  transform-style: preserve-3d;\r\n  transition: transform 1.2s ease-in-out, opacity 1.2s ease-in-out;\r\n  opacity: 0;\r\n  z-index: 0;\r\n  margin: 20px auto; /* 화면 중앙 정렬 */\r\n}\r\n\r\n/* 활성 카드 */\r\n.card.active {\r\n  opacity: 1;\r\n  z-index: 2;\r\n  transform: rotateY(0deg) translateX(0);\r\n}\r\n\r\n/* 뒤로 이동 */\r\n.card.backward {\r\n  z-index: 1;\r\n  transform: rotateY(-90deg) translateX(-100%);\r\n  opacity: 0;\r\n}\r\n\r\n/* 카드 애니메이션 진입 */\r\n.card.enter {\r\n  opacity: 0;\r\n  transform: rotateY(90deg) translateX(100%);\r\n}\r\n\r\n/* 카드 콘텐츠 */\r\n.content {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  text-align: center;\r\n  background: #e50914;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* 텍스트 스타일 */\r\nh2 {\r\n  margin-bottom: 20px;\r\n  font-size: 1.5rem;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-top: 10px;\r\n  font-size: 0.9rem;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 6px;\r\n  margin-bottom: 12px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 0.9rem;\r\n  margin: 20px auto;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #bf0812;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #a10610;\r\n}\r\n\r\n.switch {\r\n  margin-top: 15px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.error {\r\n  color: yellow;\r\n  font-size: 0.8rem;\r\n  margin-top: 8px;\r\n}\r\n\r\n/* 반응형 스타일 */\r\n@media (max-width: 768px) {\r\n  .wrapper {\r\n    width: 95%; /* 작은 화면에서 wrapper 너비 확대 */\r\n    padding: 10px; /* 여백 추가 */\r\n  }\r\n\r\n  .content {\r\n    padding: 15px; /* 콘텐츠 여백 감소 */\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.2rem; /* 제목 크기 축소 */\r\n  }\r\n\r\n  input {\r\n    font-size: 0.8rem; /* 입력 필드 글자 크기 축소 */\r\n    padding: 8px; /* 입력 필드 여백 축소 */\r\n  }\r\n\r\n  button {\r\n    font-size: 0.8rem; /* 버튼 글자 크기 축소 */\r\n    padding: 8px; /* 버튼 여백 축소 */\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .wrapper {\r\n    width: 100%; /* 모바일 화면에서 전체 너비 사용 */\r\n    padding: 10px;\r\n  }\r\n\r\n  .content {\r\n    padding: 40px; /* 모바일 콘텐츠 여백 축소 */\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1rem; /* 제목 크기 더 축소 */\r\n  }\r\n\r\n  input {\r\n    font-size: 0.8rem; /* 입력 필드 글자 크기 축소 */\r\n    padding: 8px;\r\n  }\r\n\r\n  button {\r\n    font-size: 0.8rem; /* 버튼 글자 크기 축소 */\r\n    padding: 8px;\r\n  }\r\n}\r\n\r\n  /* 컨테이너 가로 폭 */\r\n  .card {\r\n      width: 70%; /* 화면 너비의 70%로 설정 */\r\n      max-width: 350px; /* 최대 350px로 제한 */\r\n      margin: 0 auto; /* 중앙 정렬 */\r\n      padding: 20px; /* 내부 여백 */\r\n      background-color: red; /* 카드 배경색 */\r\n      border-radius: 10px; /* 둥근 모서리 */\r\n      height: auto;\r\n  }\r\n\r\n  /* 버튼과 \"Remember Me\" 간 간격 조정 */\r\n  .remember-me {\r\n      margin-bottom: 5px; /* Remember Me와 버튼 사이 간격 */\r\n  }\r\n\r\n  button {\r\n      margin-top: 10px; /* 버튼 위쪽 간격 */\r\n      padding: 10px 20px; /* 버튼 내부 여백 */\r\n      width: 100%; /* 버튼을 컨테이너 너비에 맞춤 */\r\n      background-color: darkred; /* 버튼 배경색 */\r\n      color: white; /* 버튼 텍스트 색 */\r\n      border: none; /* 버튼 테두리 제거 */\r\n      border-radius: 5px; /* 버튼 모서리 둥글게 */\r\n  }\r\n  .container {\r\n    width: 100%;\r\n    max-width: 400px;\r\n    padding: 20px; /* 기존 padding을 줄임 */\r\n    margin: 0 auto;\r\n    background-color: rgb(102, 4, 4);\r\n}\r\n\r\n/*prompt engineering 답변*/\r\ninput,\r\nbutton {\r\n    width: 100%;\r\n    margin: 8px 0; /* 위아래 간격 최소화 */\r\n    padding: 8px;   /* 내부 공간 줄임 */\r\n    font-size: 14px; /* 글꼴 크기 줄임 */\r\n}\r\n\r\n.checkbox-label {\r\n    margin-left: 5px;\r\n}\r\n\r\n.terms {\r\n    font-size: 12px; /* 텍스트 크기 줄임 */\r\n    line-height: 1.2; /* 줄 간격 축소 */\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}